// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package nc.noumea.mairie.sirh.eae.domain;

import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import nc.noumea.mairie.sirh.eae.domain.EaeFichePoste;
import org.springframework.transaction.annotation.Transactional;

privileged aspect EaeFichePoste_Roo_Jpa_ActiveRecord {
    
    @PersistenceContext(unitName = "eaePersistenceUnit")
    transient EntityManager EaeFichePoste.entityManager;
    
    public static final EntityManager EaeFichePoste.entityManager() {
        EntityManager em = new EaeFichePoste().entityManager;
        if (em == null) throw new IllegalStateException("Entity manager has not been injected (is the Spring Aspects JAR configured as an AJC/AJDT aspects library?)");
        return em;
    }
    
    public static long EaeFichePoste.countEaeFichePostes() {
        return entityManager().createQuery("SELECT COUNT(o) FROM EaeFichePoste o", Long.class).getSingleResult();
    }
    
    public static List<EaeFichePoste> EaeFichePoste.findAllEaeFichePostes() {
        return entityManager().createQuery("SELECT o FROM EaeFichePoste o", EaeFichePoste.class).getResultList();
    }
    
    public static EaeFichePoste EaeFichePoste.findEaeFichePoste(Integer idEaeFichePoste) {
        if (idEaeFichePoste == null) return null;
        return entityManager().find(EaeFichePoste.class, idEaeFichePoste);
    }
    
    public static List<EaeFichePoste> EaeFichePoste.findEaeFichePosteEntries(int firstResult, int maxResults) {
        return entityManager().createQuery("SELECT o FROM EaeFichePoste o", EaeFichePoste.class).setFirstResult(firstResult).setMaxResults(maxResults).getResultList();
    }
    
    @Transactional
    public void EaeFichePoste.persist() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.persist(this);
    }
    
    @Transactional
    public void EaeFichePoste.remove() {
        if (this.entityManager == null) this.entityManager = entityManager();
        if (this.entityManager.contains(this)) {
            this.entityManager.remove(this);
        } else {
            EaeFichePoste attached = EaeFichePoste.findEaeFichePoste(this.idEaeFichePoste);
            this.entityManager.remove(attached);
        }
    }
    
    @Transactional
    public void EaeFichePoste.flush() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.flush();
    }
    
    @Transactional
    public void EaeFichePoste.clear() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.clear();
    }
    
    @Transactional
    public EaeFichePoste EaeFichePoste.merge() {
        if (this.entityManager == null) this.entityManager = entityManager();
        EaeFichePoste merged = this.entityManager.merge(this);
        this.entityManager.flush();
        return merged;
    }
    
}
