// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package nc.noumea.mairie.sirh.eae.domain;

import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import nc.noumea.mairie.sirh.eae.domain.EaeAutoEvaluation;
import org.springframework.transaction.annotation.Transactional;

privileged aspect EaeAutoEvaluation_Roo_Jpa_ActiveRecord {
    
    @PersistenceContext(unitName = "eaePersistenceUnit")
    transient EntityManager EaeAutoEvaluation.entityManager;
    
    public static final EntityManager EaeAutoEvaluation.entityManager() {
        EntityManager em = new EaeAutoEvaluation().entityManager;
        if (em == null) throw new IllegalStateException("Entity manager has not been injected (is the Spring Aspects JAR configured as an AJC/AJDT aspects library?)");
        return em;
    }
    
    public static long EaeAutoEvaluation.countEaeAutoEvaluations() {
        return entityManager().createQuery("SELECT COUNT(o) FROM EaeAutoEvaluation o", Long.class).getSingleResult();
    }
    
    public static List<EaeAutoEvaluation> EaeAutoEvaluation.findAllEaeAutoEvaluations() {
        return entityManager().createQuery("SELECT o FROM EaeAutoEvaluation o", EaeAutoEvaluation.class).getResultList();
    }
    
    public static EaeAutoEvaluation EaeAutoEvaluation.findEaeAutoEvaluation(Integer idEaeAutoEvaluation) {
        if (idEaeAutoEvaluation == null) return null;
        return entityManager().find(EaeAutoEvaluation.class, idEaeAutoEvaluation);
    }
    
    public static List<EaeAutoEvaluation> EaeAutoEvaluation.findEaeAutoEvaluationEntries(int firstResult, int maxResults) {
        return entityManager().createQuery("SELECT o FROM EaeAutoEvaluation o", EaeAutoEvaluation.class).setFirstResult(firstResult).setMaxResults(maxResults).getResultList();
    }
    
    @Transactional
    public void EaeAutoEvaluation.persist() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.persist(this);
    }
    
    @Transactional
    public void EaeAutoEvaluation.remove() {
        if (this.entityManager == null) this.entityManager = entityManager();
        if (this.entityManager.contains(this)) {
            this.entityManager.remove(this);
        } else {
            EaeAutoEvaluation attached = EaeAutoEvaluation.findEaeAutoEvaluation(this.idEaeAutoEvaluation);
            this.entityManager.remove(attached);
        }
    }
    
    @Transactional
    public void EaeAutoEvaluation.flush() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.flush();
    }
    
    @Transactional
    public void EaeAutoEvaluation.clear() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.clear();
    }
    
    @Transactional
    public EaeAutoEvaluation EaeAutoEvaluation.merge() {
        if (this.entityManager == null) this.entityManager = entityManager();
        EaeAutoEvaluation merged = this.entityManager.merge(this);
        this.entityManager.flush();
        return merged;
    }
    
}
